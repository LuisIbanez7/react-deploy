[{"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\index.js":"1","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\reportWebVitals.js":"2","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\App.js":"3","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\forms.js":"4","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\team.js":"5","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\users\\reducer.js":"6","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\FooterComponent.js":"7","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\HeaderComponent.js":"8","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\users\\actions.js":"9","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\ActionCreators.js":"10","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\About.js":"11","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Team.js":"12","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Support.js":"13","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\Actions.js":"14","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\users\\action-types.js":"15","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Home.js":"16","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\MyAccount.js":"17","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Register.js":"18","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\shared\\baseUrl.js":"19","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\configureStore.js":"20"},{"size":836,"mtime":1612994232039,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":2804,"mtime":1612989057744,"results":"24","hashOfConfig":"22"},{"size":256,"mtime":1612471637287,"results":"25","hashOfConfig":"22"},{"size":540,"mtime":1612390335163,"results":"26","hashOfConfig":"22"},{"size":349,"mtime":1612995630313,"results":"27","hashOfConfig":"22"},{"size":524,"mtime":1612570729754,"results":"28","hashOfConfig":"22"},{"size":1021,"mtime":1612570117583,"results":"29","hashOfConfig":"22"},{"size":2056,"mtime":1612993052453,"results":"30","hashOfConfig":"22"},{"size":2419,"mtime":1612811802111,"results":"31","hashOfConfig":"22"},{"size":1731,"mtime":1612282622644,"results":"32","hashOfConfig":"22"},{"size":1085,"mtime":1612569772591,"results":"33","hashOfConfig":"22"},{"size":4550,"mtime":1612569839208,"results":"34","hashOfConfig":"22"},{"size":246,"mtime":1612989456400,"results":"35","hashOfConfig":"22"},{"size":39,"mtime":1612819553968,"results":"36","hashOfConfig":"22"},{"size":3102,"mtime":1612822150928,"results":"37","hashOfConfig":"22"},{"size":4929,"mtime":1612988918864,"results":"38","hashOfConfig":"22"},{"size":6623,"mtime":1612813745586,"results":"39","hashOfConfig":"22"},{"size":50,"mtime":1612117844079,"results":"40","hashOfConfig":"22"},{"size":725,"mtime":1612994535578,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1aaf9vk",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\index.js",[],["89","90"],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\reportWebVitals.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\App.js",["91","92"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './components/HeaderComponent';\r\nimport Footer from './components/FooterComponent';\r\nimport { Switch, Route, withRouter } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport About from './pages/About';\r\nimport Team from './pages/Team';\r\nimport Support from './pages/Support';\r\nimport Register from './pages/Register';\r\nimport MyAccount from './pages/MyAccount';\r\nimport {Redirect }from 'react-router-dom';\r\nimport { postSupport, fetchTeam } from './redux/ActionCreators';\r\n\r\nimport { postUser } from './redux/users/actions';\r\nimport { actions } from 'react-redux-form';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  // Constructor() {\r\n  //   this.state = {\r\n  //     username: null,\r\n  //     password: null,\r\n  //     login: false,\r\n  //     store: null\r\n  //   };\r\n  // }\r\n  //\r\n  componentDidMount() {\r\n  //   this.storeCollector();\r\n    this.props.fetchTeam();\r\n  }\r\n  // storeCollector() {\r\n  //   let store=JSON.parse(localStorage.getItem('login'));\r\n  //   if (store && store.login) {\r\n  //     this.setState({login: true, store: store})\r\n  //   }\r\n  // }\r\n  //\r\n  // login() {\r\n  //   fetch('http://192.168.4.11:31337/authenticate', {\r\n  //     method:\"POST\",\r\n  //     body:JSON.stringify(this.state)\r\n  //   }).then((response) => {\r\n  //     response.json().then((result) => {\r\n  //       console.warn(\"result\", result);\r\n  //       localStorage.setItem('login',JSON.stringify({\r\n  //         login: true,\r\n  //         token: result.token\r\n  //       }))\r\n  //       this.storeCollector();\r\n  //     })\r\n  //   })\r\n  // }\r\n\r\n  render() {\r\n\r\n  return (\r\n    <div>\r\n    <Header />\r\n    <Switch location={this.props.location}>\r\n    <Route path=\"/\" exact component={() => <Home />} />\r\n    <Route path=\"/about\" component={About} />\r\n    <Route path=\"/team\" component={() => <Team team={this.props.team} />} />\r\n    <Route path=\"/support\" component={() => <Support postSupport={this.props.postSupport} resetSupportForm={this.props.resetSupportForm} />} />\r\n    <Route path=\"/register\" component={() => <Register resetRegisterForm={this.props.resetRegisterForm} />} />\r\n    <Route path=\"/account\" component={MyAccount} />\r\n    </Switch>\r\n    <Footer />\r\n    </div>\r\n  );\r\n}}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    team: state.team\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchTeam: () => {dispatch(fetchTeam())},\r\n\tresetSupportForm: () => { dispatch(actions.reset('support'))},\r\n  resetRegisterForm: () => { dispatch(actions.reset('user'))},\r\n  postSupport: (firstname, lastname, email, message) => { dispatch(postSupport(firstname, lastname, email, message))}\r\n\r\n});\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\forms.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\team.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\users\\reducer.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\FooterComponent.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\HeaderComponent.js",["93","94"],"import React, { Component } from 'react';\r\nimport {\r\n  Navbar,\r\n  Button\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport '../index.css';\r\n\r\nclass Header extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div style={{textAlign: 'center'}} className=\"row\">\r\n          <Navbar>\r\n            <div className=\"col-md-4 col-sm-12 col-12\">\r\n\r\n              <img src=\"path857.png\"></img>\r\n\r\n            </div>\r\n\r\n            <div className=\"col-md-2 col-3\">\r\n                <Link to=\"/\">Home</Link>\r\n            </div>\r\n            <div className=\"col-md-2 col-3\">\r\n                <Link to=\"/about\">About</Link>\r\n            </div>\r\n            <div className=\"col-md-2 col-3\">\r\n                <Link to=\"/team\">Team</Link>\r\n            </div>\r\n\r\n            <div className=\"col-md-2 col-3\">\r\n                <Link to=\"/support\">Support</Link>\r\n            </div>\r\n\r\n\r\n          </Navbar>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\users\\actions.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\ActionCreators.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\About.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Team.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Support.js",["95","96","97","98","99"],"import React, { Component } from 'react';\r\nimport '../index.css';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\nimport { Button, Col, Row } from 'reactstrap';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Support extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    this.props.postSupport(values.firstname, values.lastname, values.email, values.message);\r\n    console.log(\"Current State is: \" + JSON.stringify(values));\r\n    alert(\"Your support message has been logged!\\n\" + JSON.stringify(values));\r\n    this.props.resetSupportForm();\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 id=\"title\">This is a Very Supportive Title!!!</h2>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div className=\"col\" id=\"smoothBorder\">\r\n          <p style={{textAlign: 'center'}}>We want to help you with your bank problems. Throw us a line, why don'cha?</p>\r\n        </div>\r\n      </div>\r\n      <Form model=\"support\" onSubmit={(values) => this.handleSubmit(values)}>\r\n        <Row className=\"form-group\">\r\n          <Col xs={6}>\r\n            <Control.text\r\n              model=\".firstname\"\r\n              id=\"firstname\"\r\n              name=\"firstname\"\r\n              placeholder=\"First Name*\"\r\n              className=\"form-control\"\r\n              validators={{required, minLength: minLength(3), maxLength: maxLength(15)}}\r\n            />\r\n            <Errors\r\n              className=\"text-danger\"\r\n              model=\".firstname\"\r\n              show=\"touched\"\r\n              messages={{\r\n                required: 'Required. ',\r\n                minLength: 'Must be greater than 2 characters. ',\r\n                maxLength: 'Must be shorter than 16 characters. '\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col xs={6}>\r\n            <Control.text\r\n              model=\".lastname\"\r\n              id=\"lastname\"\r\n              name=\"lastname\"\r\n              placeholder=\"Last Name*\"\r\n              className=\"form-control\"\r\n              validators={{required, minLength: minLength(3), maxLength: maxLength(15)}}\r\n            />\r\n            <Errors\r\n              className=\"text-danger\"\r\n              model=\".lastname\"\r\n              show=\"touched\"\r\n              messages={{\r\n                required: 'Required. ',\r\n                minLength: 'Must be greater than 2 characters. ',\r\n                maxLength: 'Must be shorter than 16 characters. '\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"form-group\">\r\n          <Col md={12}>\r\n            <Control.text\r\n              model=\".email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email Address*\"\r\n              className=\"form-control\"\r\n              validators={{required, minLength: minLength(3), maxLength: maxLength(15), validEmail}}\r\n            />\r\n            <Errors\r\n              className=\"text-danger\"\r\n              model=\".email\"\r\n              show=\"touched\"\r\n              messages={{\r\n                required: 'Required. ',\r\n                validEmail: 'Invalid Email Address. '\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"form-group\">\r\n          <Col md={12}>\r\n            <Control.textarea\r\n              model=\".message\"\r\n              id=\"message\"\r\n              className=\"form-control\"\r\n              name=\"message\"\r\n              placeholder=\"Enter message here*\"\r\n              rows=\"6\"\r\n              validators={{required, minLength: minLength(3), maxLength: maxLength(255)}}\r\n            />\r\n            <Errors\r\n              className=\"text-danger\"\r\n              model=\".message\"\r\n              show=\"touched\"\r\n              messages={{\r\n                required: 'Required. ',\r\n                minLength: 'Must be greater than 2 characters. ',\r\n                maxLength: 'Must be shorter than 256 characters. '\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"form-group\">\r\n          <Col xs={12}>\r\n            <Button type=\"submit\" block color=\"primary\">Send Support</Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n}}\r\n\r\nexport default Support;\r\n","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\Actions.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\users\\action-types.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Home.js",["100","101","102"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\nimport { Button, Col, Row, NavLink } from 'reactstrap';\r\nimport { postUser } from '../redux/users/actions';\r\nimport {Redirect }from 'react-router-dom';\r\n\r\nimport '../index.css';\r\n\r\nconst required = (val) => val && val.length;\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    this.props.postUser(values);\r\n  }\r\n\r\n  render () {\r\n\r\n  const{ isLoggedIn } = this.props;\r\n\r\n  if (isLoggedIn){\r\n    return(<Redirect to=\"/account\" />)\r\n  }\r\n\r\n\r\n  return (\r\n    <div id=\"bg\" className=\"container\">\r\n      <h2 id=\"title\">We love our customers and their money</h2>\r\n      <hr />\r\n      <div style={{padding: '5px'}} className=\"row align-items-center\">\r\n        <div className=\"col-lg-4 offset-lg-4 col-md-6 offset-md-3 col-8 offset-2\" id=\"inputBox\">\r\n        <h4>Welcome Back!</h4>\r\n\r\n        <Form model=\"user\" onSubmit={(values) => this.handleSubmit(values)}>\r\n          <Row className=\"form-group\" xs={6}>\r\n            <Col xs={12}>\r\n              <Control.text\r\n                model=\".userName\"\r\n                id=\"userName\"\r\n                name=\"userName\"\r\n                placeholder=\"Username*\"\r\n                className=\"form-control\"\r\n                validators={{required}}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".firstname\"\r\n                show=\"touched\"\r\n                messages={{\r\n                  required: 'Required. '\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group\">\r\n            <Col xs={12}>\r\n              <Control.password\r\n                model=\".password\"\r\n                id=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                placeholder=\"Password*\"\r\n                validators={{required}}\r\n              />\r\n              <Errors\r\n                className=\"text-danger\"\r\n                model=\".message\"\r\n                show=\"touched\"\r\n                messages={{\r\n                  required: 'Required. '\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group\">\r\n            <Col xs={12}>\r\n              <Button type=\"submit\" block color=\"primary\">Login</Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        <div className=\"col-8 offset-2\">\r\n        <p />\r\n          <NavLink style={{backgroundColor: 'white', borderRadius: '15px', fontSize: '14px'}} href=\"/register\">No account? Register!</NavLink>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}}\r\n\r\nconst mapStateToProps = (state)=> ({\r\n    isLoggedIn: state.userStatus.isLoggedIn,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postUser: (values) => { dispatch(postUser(values)) }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\MyAccount.js",["103","104","105","106","107"],"import React from 'react';\r\nimport '../index.css';\r\nimport { ListGroupItem, ListGroup, Button, Table } from 'reactstrap';\r\nimport { PersonCircle, Gear } from 'react-bootstrap-icons';\r\nimport {useDispatch} from 'react-redux';\r\n\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useParams,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\n\r\nfunction RenderChecking() {\r\n  return (\r\n    <tr>\r\n      <td></td>\r\n      <td></td>\r\n      <td></td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nconst CheckingAccount = () => {\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h3> </h3>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h2>Current Balance</h2>\r\n          <h1>$100.00</h1>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <Button block color=\"danger\">Delete Account</Button>\r\n          <Button block color=\"warning\">Delete Transaction</Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\" >\r\n        <div className=\"col\">\r\n        <Table striped dark>\r\n    <thead>\r\n      <tr>\r\n        <th>Transaction</th>\r\n        <th>Amount</th>\r\n        <th>Date</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>Mac Dondald's</td>\r\n        <td>-$652.00</td>\r\n        <td>10/10/2019</td>\r\n      </tr>\r\n      <tr>\r\n        <td>What a Burger</td>\r\n        <td>-$889.99</td>\r\n        <td>12/10/2020</td>\r\n      </tr>\r\n    </tbody>\r\n  </Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nconst BusinessAccounts = () => {\r\n\r\n  return (\r\n    <>my acccount</>\r\n  )\r\n}\r\nconst SavingsAccount = () => {\r\n\r\n  return (\r\n    <>my acccount</>\r\n  )\r\n}\r\n\r\nconst CDAccounts = () => {\r\n\r\n  return (\r\n    <>my acccount</>\r\n  )\r\n}\r\n\r\nconst IRAAccount = () => {\r\n\r\n  return (\r\n    <>my acccount</>\r\n  )\r\n}\r\n\r\nconst RothIRA = () => {\r\n\r\n  return (\r\n    <>my acccount</>\r\n  )\r\n}\r\n\r\nconst RolloverIRA = () => {\r\n\r\n  return (\r\n    <>my acccount</>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nconst MyAccount = () =>  {\r\n\r\n  let { path, url } = useRouteMatch();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <hr />\r\n      <div id=\"maxheight\" className=\"row\">\r\n      <div className=\"col-4\">\r\n      <ListGroup>\r\n        <ListGroupItem disabled style={{backgroundColor: '#50AEEC', color: 'black'}}><PersonCircle /> My Accounts</ListGroupItem>\r\n        <Link to={`/account/checking-accounts`}>\r\n          <ListGroupItem tag=\"button\" action>\r\n            Checking Account\r\n          </ListGroupItem>\r\n        </Link>\r\n\r\n        <Link to={`/account/dba-accounts`}>\r\n          <ListGroupItem tag=\"button\" action>\r\n            Business Accounts\r\n            </ListGroupItem>\r\n        </Link>\r\n\r\n        <Link to={`/account/savings-accounts`}>\r\n          <ListGroupItem tag=\"button\" action>\r\n            Saving Account\r\n          </ListGroupItem>\r\n        </Link>\r\n\r\n        <ListGroupItem disabled style={{backgroundColor: '#50AEEC', color: 'black'}}><PersonCircle /> My Investments</ListGroupItem>\r\n\r\n        <Link to={`/account/cd-accounts`}>\r\n          <ListGroupItem tag=\"button\" action>\r\n            CD Accounts\r\n            </ListGroupItem>\r\n        </Link>\r\n\r\n        <Link to={`/account/ira`}>\r\n          <ListGroupItem tag=\"button\" action>\r\n            IRA Account\r\n            </ListGroupItem>\r\n        </Link>\r\n\r\n        <Link to={`/account/roth-ira`}>\r\n          <ListGroupItem tag=\"button\" action>\r\n            Roth IRA\r\n            </ListGroupItem>\r\n\r\n            <Link to={`/account/rollover-ira`}>\r\n          <ListGroupItem tag=\"button\" action>\r\n            Rollover IRA\r\n            </ListGroupItem>\r\n        </Link>\r\n        </Link>\r\n        {/* <ListGroupItem tag=\"button\" action>Account</ListGroupItem> */}\r\n        <ListGroupItem tag=\"button\" action>CD Rates</ListGroupItem>\r\n        <ListGroupItem disabled style={{backgroundColor: '#50AEEC', color: 'black'}}><Gear /> Settings</ListGroupItem>\r\n        <ListGroupItem tag=\"button\" action>Profile</ListGroupItem>\r\n        <ListGroupItem tag=\"button\" action>Account Data</ListGroupItem>\r\n      </ListGroup>\r\n      </div>\r\n      <div className=\"col-8\">\r\n      <Switch>\r\n        {/* <Route exact path={path}>\r\n          < />\r\n        </Route> */}\r\n        <Route path={`${path}/checking-accounts`}>\r\n          < CheckingAccount />\r\n        </Route>\r\n        <Route path={`${path}/dba-accounts`}>\r\n          < BusinessAccounts />\r\n        </Route>\r\n        <Route path={`${path}/savings-accounts`}>\r\n          < SavingsAccount />\r\n        </Route>\r\n        <Route path={`${path}/cd-accounts`}>\r\n          < CDAccounts />\r\n        </Route>\r\n        <Route path={`${path}/ira-accounts`}>\r\n          < IRAAccount />\r\n        </Route>\r\n        <Route path={`${path}/roth-ira`}>\r\n          < RothIRA />\r\n        </Route>\r\n        <Route path={`${path}/rollover-ira`}>\r\n          < RolloverIRA />\r\n        </Route>\r\n\r\n\r\n      </Switch>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyAccount;\r\n","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Register.js",["108","109","110","111","112","113","114","115","116","117","118","119","120","121"],"import React, { Component } from 'react';\r\nimport '../index.css';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\nimport { Button, Label, Col, Row } from 'reactstrap';\r\nimport { createUser } from '../redux/users/actions';\r\nimport { connect } from 'react-redux';\r\nimport {Redirect }from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    this.props.createUser(values);\r\n    console.log(\"Current State is: \" + JSON.stringify(values));\r\n    alert(\"Registering user.\\n\" + JSON.stringify(values));\r\n    this.props.resetRegisterForm();\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n  return(\r\n    <div className=\"container col-6\">\r\n      <h2 id=\"title\">One Step Closer to a Merit America</h2>\r\n      <hr />\r\n      <div id=\"inputBox\">\r\n      <Form model=\"user\" onSubmit={(values) => this.handleSubmit(values)}>\r\n        <Row className=\"form-group\" xs={6}>\r\n          <Col xs={12}>\r\n            <Control.text\r\n              model=\".firstName\"\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              placeholder=\"First Name*\"\r\n              className=\"form-control\"\r\n              validators={{required}}\r\n            />\r\n            <Errors\r\n              className=\"text-danger\"\r\n              model=\".firstName\"\r\n              show=\"touched\"\r\n              messages={{\r\n                required: 'Required. ',\r\n                minLength: 'Must be greater than 2 characters. ',\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"form-group\" xs={6}>\r\n          <Col xs={12}>\r\n            <Control.text\r\n              model=\".middleName\"\r\n              id=\"middleName\"\r\n              name=\"middleName\"\r\n              placeholder=\"Middle Name\"\r\n              className=\"form-control\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"form-group\" xs={6}>\r\n          <Col xs={12}>\r\n            <Control.text\r\n              model=\".lastName\"\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              placeholder=\"Last Name*\"\r\n              className=\"form-control\"\r\n              validators={{required}}\r\n            />\r\n            <Errors\r\n              className=\"text-danger\"\r\n              model=\".lastName\"\r\n              show=\"touched\"\r\n              messages={{\r\n                required: 'Required. ',\r\n                minLength: 'Must be greater than 2 characters. ',\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"form-group\" xs={6}>\r\n          <Col xs={12}>\r\n            <Control.text\r\n              type='date'\r\n              model=\".dob\"\r\n              id=\"dob\"\r\n              name=\"dob\"\r\n              placeholder=\"Date of Birth*\"\r\n              className=\"form-control\"\r\n              validators={{required}}\r\n            />\r\n            <Errors\r\n              className=\"text-danger\"\r\n              model=\".dob\"\r\n              show=\"touched\"\r\n              messages={{\r\n                required: 'Required. ',\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"form-group\" xs={6}>\r\n          <Col xs={12}>\r\n            <Control.text\r\n              type='number'\r\n              model=\".ssn\"\r\n              id=\"ssn\"\r\n              name=\"ssn\"\r\n              placeholder=\"SSN*\"\r\n              className=\"form-control\"\r\n              validators={{required}}\r\n            />\r\n            <Errors\r\n              className=\"text-danger\"\r\n              model=\".ssn\"\r\n              show=\"touched\"\r\n              messages={{\r\n                required: 'Required. ',\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"form-group\" xs={6}>\r\n          <Col xs={12}>\r\n            <Control.text\r\n              model=\".userName\"\r\n              id=\"userName\"\r\n              name=\"userName\"\r\n              placeholder=\"Username*\"\r\n              className=\"form-control\"\r\n              validators={{required}}\r\n            />\r\n            <Errors\r\n              className=\"text-danger\"\r\n              model=\".userName\"\r\n              show=\"touched\"\r\n              messages={{\r\n                required: 'Required. ',\r\n                minLength: 'Must be greater than 2 characters. ',\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"form-group\" xs={6}>\r\n          <Col xs={12}>\r\n            <Control.text\r\n              model=\".email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email*\"\r\n              className=\"form-control\"\r\n              validators={{required}}\r\n            />\r\n            <Errors\r\n              className=\"text-danger\"\r\n              model=\".email\"\r\n              show=\"touched\"\r\n              messages={{\r\n                required: 'Required. ',\r\n                minLength: 'Must be greater than 2 characters. ',\r\n                maxLength: 'Must be shorter than 16 characters. '\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"form-group\">\r\n          <Col xs={12}>\r\n            <Control.password\r\n              model=\".password\"\r\n              id=\"password\"\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              placeholder=\"Password*\"\r\n              validators={{required}}\r\n            />\r\n            <Errors\r\n              className=\"text-danger\"\r\n              model=\".password\"\r\n              show=\"touched\"\r\n              messages={{\r\n                required: 'Required. ',\r\n                minLength: 'Must be greater than 2 characters. ',\r\n                maxLength: 'Must be shorter than 17 characters. '\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"form-group\">\r\n          <Col xs={12}>\r\n            <Button type=\"submit\" block color=\"primary\">Register</Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createUser: (values) => {dispatch(createUser(values))}\r\n});\r\n\r\nconst mapStateToProps = (dispatch) => ({\r\n  createUser: (values) => { dispatch (createUser(values))}\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\shared\\baseUrl.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\configureStore.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":12,"column":9,"nodeType":"128","messageId":"129","endLine":12,"endColumn":17},{"ruleId":"126","severity":1,"message":"130","line":15,"column":10,"nodeType":"128","messageId":"129","endLine":15,"endColumn":18},{"ruleId":"126","severity":1,"message":"131","line":4,"column":3,"nodeType":"128","messageId":"129","endLine":4,"endColumn":9},{"ruleId":"132","severity":1,"message":"133","line":18,"column":15,"nodeType":"134","endLine":18,"endColumn":38},{"ruleId":"126","severity":1,"message":"135","line":3,"column":33,"nodeType":"128","messageId":"129","endLine":3,"endColumn":40},{"ruleId":"136","severity":1,"message":"137","line":40,"column":13,"nodeType":"134","endLine":47,"endColumn":15},{"ruleId":"136","severity":1,"message":"137","line":60,"column":13,"nodeType":"134","endLine":67,"endColumn":15},{"ruleId":"136","severity":1,"message":"137","line":82,"column":13,"nodeType":"134","endLine":89,"endColumn":15},{"ruleId":"136","severity":1,"message":"138","line":103,"column":13,"nodeType":"134","endLine":111,"endColumn":15},{"ruleId":"126","severity":1,"message":"135","line":3,"column":33,"nodeType":"128","messageId":"129","endLine":3,"endColumn":40},{"ruleId":"136","severity":1,"message":"137","line":42,"column":15,"nodeType":"134","endLine":49,"endColumn":17},{"ruleId":"136","severity":1,"message":"139","line":63,"column":15,"nodeType":"134","endLine":70,"endColumn":17},{"ruleId":"126","severity":1,"message":"140","line":9,"column":20,"nodeType":"128","messageId":"129","endLine":9,"endColumn":26},{"ruleId":"126","severity":1,"message":"141","line":13,"column":3,"nodeType":"128","messageId":"129","endLine":13,"endColumn":12},{"ruleId":"126","severity":1,"message":"142","line":17,"column":10,"nodeType":"128","messageId":"129","endLine":17,"endColumn":24},{"ruleId":"126","severity":1,"message":"143","line":116,"column":15,"nodeType":"128","messageId":"129","endLine":116,"endColumn":18},{"ruleId":"126","severity":1,"message":"144","line":118,"column":9,"nodeType":"128","messageId":"129","endLine":118,"endColumn":17},{"ruleId":"126","severity":1,"message":"135","line":3,"column":33,"nodeType":"128","messageId":"129","endLine":3,"endColumn":40},{"ruleId":"126","severity":1,"message":"145","line":4,"column":18,"nodeType":"128","messageId":"129","endLine":4,"endColumn":23},{"ruleId":"126","severity":1,"message":"127","line":7,"column":9,"nodeType":"128","messageId":"129","endLine":7,"endColumn":17},{"ruleId":"126","severity":1,"message":"146","line":10,"column":7,"nodeType":"128","messageId":"129","endLine":10,"endColumn":16},{"ruleId":"126","severity":1,"message":"147","line":11,"column":7,"nodeType":"128","messageId":"129","endLine":11,"endColumn":16},{"ruleId":"126","severity":1,"message":"148","line":12,"column":7,"nodeType":"128","messageId":"129","endLine":12,"endColumn":17},{"ruleId":"136","severity":1,"message":"137","line":40,"column":13,"nodeType":"134","endLine":47,"endColumn":15},{"ruleId":"136","severity":1,"message":"137","line":61,"column":13,"nodeType":"134","endLine":67,"endColumn":15},{"ruleId":"136","severity":1,"message":"137","line":72,"column":13,"nodeType":"134","endLine":79,"endColumn":15},{"ruleId":"136","severity":1,"message":"137","line":93,"column":13,"nodeType":"134","endLine":101,"endColumn":15},{"ruleId":"136","severity":1,"message":"137","line":114,"column":13,"nodeType":"134","endLine":122,"endColumn":15},{"ruleId":"136","severity":1,"message":"137","line":135,"column":13,"nodeType":"134","endLine":142,"endColumn":15},{"ruleId":"136","severity":1,"message":"137","line":156,"column":13,"nodeType":"134","endLine":163,"endColumn":15},{"ruleId":"136","severity":1,"message":"139","line":178,"column":13,"nodeType":"134","endLine":185,"endColumn":15},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'postUser' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'actions' is defined but never used.","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component password must be in PascalCase or SCREAMING_SNAKE_CASE","'Router' is defined but never used.","'useParams' is defined but never used.","'RenderChecking' is defined but never used.","'url' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'Label' is defined but never used.","'maxLength' is assigned a value but never used.","'minLength' is assigned a value but never used.","'validEmail' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]